-- Create database for reading history
CREATE DATABASE IF NOT EXISTS history_db;
USE history_db;

-- Create reading history table
CREATE TABLE IF NOT EXISTS reading_history (
    user_id INT NOT NULL,
    chapter_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, chapter_id)
);

-- Insert sample reading history data

-- User 1 has read chapters 1, 2, 3 of comic 1
INSERT INTO reading_history (user_id, chapter_id, created_at) VALUES 
(1, 1, '2023-04-10 14:30:00'),  -- Chapter 1
(1, 2, '2023-04-11 20:15:00'),  -- Chapter 2
(1, 3, '2023-04-12 18:45:00');  -- Chapter 3

-- User 1 has also read chapters 5, 6 of comic 2
INSERT INTO reading_history (user_id, chapter_id, created_at) VALUES 
(1, 5, '2023-05-05 09:20:00'),  -- Chapter 1 of comic 2
(1, 6, '2023-05-06 22:10:00');  -- Chapter 2 of comic 2

-- User 2 has read chapters 1, 3, 5 (skipped some)
INSERT INTO reading_history (user_id, chapter_id, created_at) VALUES 
(2, 1, '2023-04-15 10:30:00'),  -- Chapter 1
(2, 3, '2023-04-17 11:25:00'),  -- Chapter 3
(2, 5, '2023-05-08 16:40:00');  -- Chapter 1 of comic 2

-- User 3 has read only the first chapter
INSERT INTO reading_history (user_id, chapter_id, created_at) VALUES 
(3, 1, '2023-04-20 19:15:00');  -- Only Chapter 1

-- User 4 hasn't read any chapters (no entries)

-- Sample queries:

-- Get all reading history for user 1
-- SELECT * FROM reading_history WHERE user_id = 1 ORDER BY created_at DESC;

-- Check if user 2 has read chapter 2
-- SELECT * FROM reading_history WHERE user_id = 2 AND chapter_id = 2;

-- Get the list of chapters read by user 3
-- SELECT chapter_id FROM reading_history WHERE user_id = 3; 